{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/erinmikail/Desktop/JupiterAtlas/frontend/src/lib/api.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { Message, ChatRequest, ChatResponse } from '../types/chat';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 30000\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(request => {\n  console.log('Starting Request:', {\n    url: request.url,\n    method: request.method,\n    data: request.data\n  });\n  return request;\n});\n\nexport const sendMessage = async (\n  question: string,\n  messages: Message[]\n): Promise<ChatResponse> => {\n  try {\n    const request: ChatRequest = {\n      question,\n      messages,\n    };\n    \n    // First try to check if the server is healthy\n    const health = await api.get('/health');\n    console.log('Health check response:', health.data);\n    \n    const response = await api.post<ChatResponse>('/chat', request);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.error('Axios error details:', {\n        message: error.message,\n        code: error.code,\n        config: error.config,\n        response: error.response ? {\n          status: error.response.status,\n          data: error.response.data,\n          headers: error.response.headers,\n        } : null,\n      });\n      throw new Error(`Connection failed: ${error.message}`);\n    } else {\n      console.error('Unexpected error:', error);\n    }\n    throw error;\n  }\n};"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;QAChB,UAAU;IACZ;IACA,SAAS;AACX;AAEA,wCAAwC;AACxC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC3B,QAAQ,GAAG,CAAC,qBAAqB;QAC/B,KAAK,QAAQ,GAAG;QAChB,QAAQ,QAAQ,MAAM;QACtB,MAAM,QAAQ,IAAI;IACpB;IACA,OAAO;AACT;AAEO,MAAM,cAAc,OACzB,UACA;IAEA,IAAI;QACF,MAAM,UAAuB;YAC3B;YACA;QACF;QAEA,8CAA8C;QAC9C,MAAM,SAAS,MAAM,IAAI,GAAG,CAAC;QAC7B,QAAQ,GAAG,CAAC,0BAA0B,OAAO,IAAI;QAEjD,MAAM,WAAW,MAAM,IAAI,IAAI,CAAe,SAAS;QACvD,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;YAC7B,QAAQ,KAAK,CAAC,wBAAwB;gBACpC,SAAS,MAAM,OAAO;gBACtB,MAAM,MAAM,IAAI;gBAChB,QAAQ,MAAM,MAAM;gBACpB,UAAU,MAAM,QAAQ,GAAG;oBACzB,QAAQ,MAAM,QAAQ,CAAC,MAAM;oBAC7B,MAAM,MAAM,QAAQ,CAAC,IAAI;oBACzB,SAAS,MAAM,QAAQ,CAAC,OAAO;gBACjC,IAAI;YACN;YACA,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,MAAM,OAAO,EAAE;QACvD,OAAO;YACL,QAAQ,KAAK,CAAC,qBAAqB;QACrC;QACA,MAAM;IACR;AACF"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/erinmikail/Desktop/JupiterAtlas/frontend/src/components/Chat.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useRef, useEffect } from 'react'\nimport { Message } from '../types/chat'\nimport { sendMessage } from '../lib/api'\nimport axios from 'axios'\n\nexport default function Chat() {\n  const [messages, setMessages] = useState<Message[]>([{\n    role: 'assistant',\n    content: \"JUPITER MOONS DATABASE ACCESSED. READY FOR QUERIES.\",\n  }])\n  const [input, setInput] = useState('')\n  const [loading, setLoading] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!input.trim() || loading) return\n\n    try {\n      setLoading(true)\n      const userMessage: Message = { role: 'user', content: input }\n      setMessages(prev => [...prev, userMessage])\n      setInput('')\n\n      const response = await sendMessage(input, messages)\n      \n      const botMessage: Message = {\n        role: 'assistant',\n        content: response.answer,\n        metadata: { context_used: !!response.context }\n      }\n      \n      setMessages(prev => [...prev, botMessage])\n    } catch (error) {\n      console.error('Error:', error)\n\n      let errorMessage = \"ERROR: Connection to Jupiter database failed. Please retry.\"\n      if (axios.isAxiosError(error) && error.response) {\n        errorMessage = `ERROR: ${error.response.data.detail || errorMessage}`\n      }\n\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: errorMessage,\n      }])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-green-500 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-4xl font-bold mb-4 text-center text-cyan-400\">\n          JUPITER MOONS EXPLORER v1.0\n        </h1>\n        <div className=\"bg-gray-900/80 border-2 border-cyan-400 rounded-lg p-4 mb-4 h-[600px] overflow-auto\">\n          {messages.map((message, index) => (\n            <div key={index} className={message.role === 'user' ? 'text-yellow-400' : 'text-green-500'}>\n              <div className=\"font-bold\">\n                {message.role === 'user' ? '> QUERY:' : '> JUPITER.DB:'}\n              </div>\n              <div className=\"ml-4\">{message.content}</div>\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            className=\"flex-grow bg-gray-800 text-green-500 border-2 border-cyan-400 rounded-lg p-2\"\n            placeholder=\"Enter your query about Jupiter's moons...\"\n            disabled={loading}\n          />\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"bg-cyan-600 text-white px-6 py-2 rounded-lg hover:bg-cyan-700\"\n          >\n            {loading ? 'PROCESSING...' : 'SEND'}\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;QAAC;YACnD,MAAM;YACN,SAAS;QACX;KAAE;IACF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,MAAM,SAAS;QAE9B,IAAI;YACF,WAAW;YACX,MAAM,cAAuB;gBAAE,MAAM;gBAAQ,SAAS;YAAM;YAC5D,YAAY,CAAA,OAAQ;uBAAI;oBAAM;iBAAY;YAC1C,SAAS;YAET,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD,EAAE,OAAO;YAE1C,MAAM,aAAsB;gBAC1B,MAAM;gBACN,SAAS,SAAS,MAAM;gBACxB,UAAU;oBAAE,cAAc,CAAC,CAAC,SAAS,OAAO;gBAAC;YAC/C;YAEA,YAAY,CAAA,OAAQ;uBAAI;oBAAM;iBAAW;QAC3C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;YAExB,IAAI,eAAe;YACnB,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,UAAU,MAAM,QAAQ,EAAE;gBAC/C,eAAe,CAAC,OAAO,EAAE,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,IAAI,cAAc;YACvE;YAEA,YAAY,CAAA,OAAQ;uBAAI;oBAAM;wBAC5B,MAAM;wBACN,SAAS;oBACX;iBAAE;QACJ,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAGlE,8OAAC;oBAAI,WAAU;;wBACZ,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,8OAAC;gCAAgB,WAAW,QAAQ,IAAI,KAAK,SAAS,oBAAoB;;kDACxE,8OAAC;wCAAI,WAAU;kDACZ,QAAQ,IAAI,KAAK,SAAS,aAAa;;;;;;kDAE1C,8OAAC;wCAAI,WAAU;kDAAQ,QAAQ,OAAO;;;;;;;+BAJ9B;;;;;sCAOZ,8OAAC;4BAAI,KAAK;;;;;;;;;;;;8BAEZ,8OAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;4BACV,aAAY;4BACZ,UAAU;;;;;;sCAEZ,8OAAC;4BACC,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,UAAU,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;AAMzC"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///Users/erinmikail/Desktop/JupiterAtlas/frontend/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport Chat from '../components/Chat'\n\nexport default function Home() {\n  return <Chat />\n}"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBAAO,8OAAC,0HAAA,CAAA,UAAI;;;;;AACd"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}